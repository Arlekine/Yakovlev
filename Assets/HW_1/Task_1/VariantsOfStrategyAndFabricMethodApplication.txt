Стратегия:

1. Контекст: Игра - спейс-скрол-шутер. В ней нужно спавнить разные объекты. Метеориты, врагов, бонусы, монетки. При этом они могут спавнится по разным паттернам. Например, случайный, сеточкой и т.д.
   Реализовать разные методы спавна можно как раз стратегией. 

2. Игра рогалик. Условный Binding of Isaac. Основная фишка - каждый этаж предметы игрока меняются на случайные. Но принцип этой смены зависит от того, какой персонаж выбран или от каких-то других причин.
   Например, предметы меняются только на предметы такого же качества, или на оборот на предметы качества на 1 ниже, или на предметы противоположной стихии (огонь на воду) и так далее. Реализовать алгоритмы смены предметов можно как раз стратегией. 

Шаблонный метож:

1. Утилита для UI, которая помогает менять размер ректа в зависимости от характеристик дочерних ректов — в конпенсацию не самого удобного ContentSizeFitter. Внутри утилиты реализован алгоритм получения и обработки дочерних объектов, рассчеты и т. д.
   Простой принцип — берем все объекты и скалдываем значения их размера. Однако нужно иметь возможность опираться на разные данные - то есть возможность в качестве "значений объектов" получать скажем или sizeDelta или Preffered Height/Width или еще что-то.
   Можно как раз реализовать метод получения таких значений в едином  алгоритме через шаблонный метод.

2. Абстрактная игра аркада про разрезание объектов, в ней есть бонусы. У бонусов есть логика срабатывающая в момент размещения на игровом поле и она никак не может быть стандартизированна, так как даже опирается на разные настройки.
   Например есть бонусы, которые режут определенным образом - они в качестве параметров конструктора принимают угол разреза и число разрезов. А есть бонус создающий замедляющее поле, который принимает размер этого поля и силу замедленния.
   При этом у бонусов есть общие значения, вроде картинки для UI или того, сколько их у игрока. При этом сущность, которая содержит в себе логику размещения бонуса имеет смысл создавать только в игровую сессию, пока игрок в игровом магазине или меню смысла в ней нет.
   В итоге было решено создать отдельную сущность Bonus, которая содержит в себе всю нужную дату и в том числе принимать на вход делегат (Func) createBonusPlacer, которая при вызове и будет создавать нужную сущность с логикой размещения. Можно ли такое назвать Шаблонным методом?